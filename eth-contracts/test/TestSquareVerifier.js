// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require("./verifier.sol");

// - use the contents from proof.json generated from zokrates steps
const proof = require("../../zokrates/code/square/proof.json");
    
contract('Verifier', accounts => {

    const owner = accounts[0];
    const account_one = accounts[1];
    const account_two = accounts[2];

    // console.log(proof.proof.a);

    describe('Tests for SquareVerifier', function () {
        beforeEach(async function () {
            this.contract = await SquareVerifier.new({ from: account_one, gas: 4700000 });
        })

        // Test verification with correct proof
        it('Test verification with correct proof', async function () {

            let correctProof = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, proof.inputs, {from: account_one});

            assert.equal(correctProof, true, "Incorrect proof");
        })

        // Test verification with incorrect proof
        it('Test verifier with incorrect proof', async function () {

            let incorrectProof = await this.contract.verifyTx.call(proof.proof.a, proof.proof.b, proof.proof.c, [7,8], {from: account_one});

            assert.equal(incorrectProof, false, "Invalid result");
        })

    });
})